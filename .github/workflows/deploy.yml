name: Deploy to PyPI

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to release (e.g., 1.2.3)"
        required: true

jobs:
  deploy:
    name: Release
    runs-on: ubuntu-latest

    permissions:
      contents: write  # required for committing & creating release

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          apt-get update && apt-get install -y jq
          python -m pip install --upgrade pip
          pip install build twine

      - name: Use input version
        run: |
          echo "PACKAGE_VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
          echo "Using version: $PACKAGE_VERSION"

      - name: Update version in setup.py
        run: |
          sed -i "s/version=['\"]v\?\([0-9.]\+\)['\"]/version='${PACKAGE_VERSION}'/" setup.py
          echo "Updated setup.py to version $PACKAGE_VERSION"

      - name: Commit and push version bump
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git commit -am "Release version $PACKAGE_VERSION"
          git push

      - name: Create GitHub release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "v${{ env.PACKAGE_VERSION }}"
          prerelease: false

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: python -m twine upload dist/*
